name: Deploy to Storefrontcloud
on:
  push:
    branches:
      - next
      - release/next
jobs:
  publish:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/next'
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: "10.x"
          registry-url: https://registry.npmjs.org/
      - name: Build packages
        run: |
          yarn
          yarn build:core
          yarn build:ct
          yarn build:prismic
      - name: Publish canary version
        run: |
          yarn lerna publish --canary --force-publish --yes --preid prealpha --dist-tag canary
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
  build:
    runs-on: ubuntu-latest
    needs: publish
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - name: Build and publish docker image
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: vsf-next-demo-storefrontcloud-io/vue-storefront:${{ github.sha }}
          registry: registry.storefrontcloud.io
          username: ${{ secrets.CLOUD_USERNAME }}
          password: ${{ secrets.CLOUD_PASSWORD }}
          dockerfile: dev/docker/Dockerfile
          buildoptions: "--compress"
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: chrnorm/deployment-action@releases/v1
        name: Create GitHub deployment
        id: deployment
        with:
          token: "${{ github.token }}"
          target_url: https://vsf-next-demo.storefrontcloud.io
          environment: production
          initial_status: in_progress
      - name: Deploy on lovecrafts-demo.storefrontcloud.io
        if: github.ref == 'refs/heads/next'
        run: |
          if curl -s -u ${{ secrets.CLOUD_USERNAME }}:${{ secrets.CLOUD_PASSWORD }} -H 'Content-Type: application/json' -X POST -d '{"code":"lovecrafts-demo","frontContainerVersion":"${{ github.sha }}"}' https://farmer.storefrontcloud.io/instances | grep -q '{"code":200,"result":"Instance updated!"}'; then
            echo "Instance updated"
          else
            echo "Something went wrong during the update process..."
            exit 1
          fi
      - name: Deploy on vsf-next-demo.storefrontcloud.io
        if: github.ref == 'refs/release/next'
        run: |
          if curl -s -u ${{ secrets.CLOUD_USERNAME }}:${{ secrets.CLOUD_PASSWORD }} -H 'Content-Type: application/json' -X POST -d '{"code":"vsf-next-demo","frontContainerVersion":"${{ github.sha }}"}' https://farmer.storefrontcloud.io/instances | grep -q '{"code":200,"result":"Instance updated!"}'; then
            echo "Instance updated"
          else
            echo "Something went wrong during the update process..."
            exit 1
          fi
      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: "${{ github.token }}"
          target_url: https://vsf-next-demo.storefrontcloud.io
          state: "success"
          description: Congratulations! The deploy is done.
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: "${{ github.token }}"
          target_url: https://vsf-next-demo.storefrontcloud.io
          description: Unfortunately, the instance hasn't been updated.
          state: "failure"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
