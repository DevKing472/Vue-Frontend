{
  "command": {
    "generate_store": {
      "description": "Generates a Vue Storefront store.",
      "input": {
        "project_name": "🚀  What's your project name?",
        "integration": "⚙️  Choose an integration template:",
        "custom_integration_repository": "🌍  What's the URL of the custom integration's git repository?",
        "overwrite": "🤔  \"./{{projectName}}\" already exists. Overwrite?"
      },
      "message": {
        "intro": "Welcome to Vue Storefront 2 CLI! 💚",
        "skipping": "😞 Can't generate the store. Please run the command again and provide a valid project name.",
        "success": "🎉  Sucessfully generated your store at \"./{{projectName}}\"!",
        "install": "To finish the installation, run the following commands:",
        "install_commands": ["cd {{ projectName }}"],
        "configure": "Project is conifugred. \nIf you want more advanced configuration go to the \n{{ documentationURL }} to learn how to do it.",
        "cd_message": "To start working with the project, cd into project directory:",
        "cd_directory": "cd {{ projectName }}",
        "start": "Start the project using this command:",
        "start_command": "yarn dev",
        "canceled": "Store generation cancelled 😞\nWe hope to see you soon! 🤗"
      },
      "progress": {
        "vsf_start": "🧩 Generating Vue Storefront project",
        "vsf_end": "🎉 Vue Storefront project has been generated",
        "delete_start": "🗑️  Deleting the existing directory",
        "delete_end": "🎉 Directory deleted",
        "create_dir": "📁 Creating a new directory",
        "docker_start": "🐳 Installing Magento 2 Docker image",
        "docker_end": "🎉 Magento 2 Docker image has been installed successfully",
        "docker_failed": "😱 Magento 2 Docker image installation failed",
        "graphql_start": "✨ Enabling GraphQL module",
        "graphql_end": "🎉 GraphQL module has been enabled successfully",
        "graphql_failed": "😱 GraphQL module enabling failed",
        "sample_data_start": "🛍️  Deploying sample data for Magento 2",
        "sample_data_end": "🎉 Sample data has been deployed successfully",
        "sample_data_failed": "😱 Sample data deployment failed",
        "install_deps_start": "📦 Installing dependencies",
        "install_deps_end": "🎉 Dependencies have been installed successfully",
        "install_deps_failed": "😱 Dependencies installation failed"
      },
      "magento": {
        "info": "Please make sure that magento directory name \nis unique and was not used before",
        "node_ok": "🙌 Node.js version is compatible",
        "node_not_ok": "😩 Node.js version is incompatible. Please make sure you use Node.js version >= 16.13 and <17.",
        "yarn_not_ok": "😩 Yarn version is incompatible. Please make sure you use Yarn version >= 1 and <3.",
        "install": "🤓 Do you want to install Magento 2 locally on your computer? (BETA)",
        "install_note": "This feature is still in beta.\nThanks for your patience! 🙏 \nYou can report any issues here: \nhttps://github.com/vuestorefront/vue-storefront/issues",
        "directory": "⌨️  Please provide a name for the Magento 2 directory",
        "docker_exists": "Docker container with the same name already exists. Please choose another name: \n",
        "overwrite": "🤔 The directory {{ magentoDirName }} already exists. Do you want to overwrite it?",
        "access_keys": "👀 Do you have Magento access keys?",
        "provide_keys": "🔐 Please provide your Magento access keys",
        "access_key": "🔑 Magento access key",
        "secret_key": "🔒 Magento secret key",
        "no_keys": "Please go to Adobe Authentication Keys Guide \nhttps://experienceleague.adobe.com/docs/commerce-operations/installation-guide/prerequisites/authentication-keys.html \nand follow instructions to get your Magento access keys.",
        "domain": "🌐 Magento domain name",
        "invalid_domain": "🫤 Please enter a valid domain name.",
        "note_long": "This may take up to 10 minutes to complete. Please wait...🐌",
        "password": "🙈 Please enter the password",
        "port_busy": "😞 Port is already in use. Please stop the container and try again.",
        "sample_data": "🛒 Do you want to generate sample data for the store?",
        "sample_data_note": "☝️ You can generate sample data later \nby running `bin/magento sampledata:deploy` \nin the Magento directory.",
        "success": "🎉 Magento 2 has been installed successfully.",
        "image_exists": "Project directory \"/var/www/html/.\" is not empty. \nPlease remove previous installation or use another directory name.",
        "failed_log": "You can find the log in the current directory in the file CLI_logs.txt",
        "error": {
          "same_dir": "😞 Magento directory name: {{ magentoDirName }} cannot be the same as Vue Storefront project name: {{ projectName }}. Please choose another name."
        }
      },
      "logs": {
        "project_name_selected": "\nProject name selected {{ projectName }}"
      }
    },
    "generate_template": {
      "description": "Generates a template of your integration's for VSF",
      "flag": {
        "output": "A path where the template will be generated"
      },
      "input": {
        "project_name": "How would you like to name the output folder?",
        "integration_path": "What's the path to the integration theme?"
      },
      "message": {
        "success": "Sucessfully created your template at \"./{{projectName}}\"!"
      }
    }
  },
  "domain": {
    "directory": {
      "was_not_found": "The directory \"{{directory}}\" was not found."
    },
    "project_name": {
      "is_empty": "Please input a project name.",
      "is_not_directory": "Please input a name that can be used as directory."
    },
    "git_repository_url": {
      "is_invalid": "Please input a valid git repository URL.",
      "was_not_found": "Couldn't locate git repository with the received URL.",
      "suggestion": "The protocol isn't supported. Use \"{{suggestion}}\" instead?"
    }
  }
}
